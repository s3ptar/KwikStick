/* ###################################################################
**     This component module is generated by Processor Expert. Do not modify it.
**     Filename    : eDMA1.h
**     Project     : ProcessorExpert
**     Processor   : MK40DX256ZVLQ10
**     Component   : Init_eDMA
**     Version     : Component 01.005, Driver 01.05, CPU db: 3.00.001
**     Compiler    : CodeWarrior ARM C Compiler
**     Date/Time   : 2019-01-07, 04:53, # CodeGen: 99
**     Abstract    :
**          This file implements the eDMA (DMA) module initialization
**          according to the Peripheral Initialization settings, and
**          defines interrupt service routines prototypes.
**     Settings    :
**          Component name                                 : eDMA1
**          Device                                         : DMA
**          Settings                                       : 
**            Clock gate for DMA                           : Enabled
**            Clock gate for DMA multiplexor               : Enabled
**            Peripheral access control                    : Peripheral access control settings in the CPU component
**            Master privilege level                       : Masters privilege settings in the CPU component
**            Channel arbitration                          : Fixed priority
**            Minor loop mapping                           : Disabled
**            Continuous link mode                         : Disabled
**            Halt on error                                : Disabled
**            Enable debug                                 : yes
**          Channels                                       : 
**            Channel 0                                    : Initialize
**              Settings                                   : 
**                Auto disable external request            : Disabled
**                Preemption                               : Disabled
**                Preempt ability                          : Enabled
**                Channel arbitration priority             : Default
**                Bandwidth control                        : No stalls
**                DMA source muxing                        : 
**                  Channel                                : Enabled
**                  Channel trigger                        : Disabled
**                  Channel source                         : ADC0
**                Data source                              : 
**                  External object declaration            : 
**                  Address                                : (uint32_t)&ADC0_RA
**                  Transfer size                          : 16-bit
**                  Address offset                         : 0
**                  Address adjustment                     : 0
**                  Address modulo                         : Buffer disabled
**                Data destination                         : 
**                  External object declaration            : extern uint16_t MeasuredValues[];
**                  Address                                : &MeasuredValues
**                  Transfer size                          : 16-bit
**                  Address offset                         : 2
**                  Address adjustment                     : 0
**                  Address modulo                         : Buffer disabled
**                Minor loop maping                        : Disabled
**                  Block length                           : 2
**                Minor linking                            : Disabled
**                  Major iteration count                  : 40
**                Major linking                            : Disabled
**                Major link channel number                : 0
**                Scatter/gather processing                : Disabled
**              Interrupts                                 : 
**                Transfer done                            : 
**                  Half transfer interrupt                : Disabled
**                  Transfer complete interrupt            : Enabled
**                Error                                    : 
**                  Error interrupt                        : Enabled
**              Pins                                       : 
**                DMA trigger                              : Disabled
**              Initialization                             : 
**                External request                         : Enabled
**                Start transfer                           : no
**            Channel 1                                    : Do not initialize
**            Channel 2                                    : Do not initialize
**            Channel 3                                    : Do not initialize
**            Channel 4                                    : Do not initialize
**            Channel 5                                    : Do not initialize
**            Channel 6                                    : Do not initialize
**            Channel 7                                    : Do not initialize
**            Channel 8                                    : Do not initialize
**            Channel 9                                    : Do not initialize
**            Channel 10                                   : Do not initialize
**            Channel 11                                   : Do not initialize
**            Channel 12                                   : Do not initialize
**            Channel 13                                   : Do not initialize
**            Channel 14                                   : Do not initialize
**            Channel 15                                   : Do not initialize
**          Interrupts                                     : 
**            Transfer done 0                              : 
**              Interrupt                                  : INT_DMA0
**              Interrupt request                          : Enabled
**              Interrupt priority                         : 0 (Highest)
**              ISR Name                                   : DMA_ADC_DoneInterrupt
**            Transfer done 1                              : 
**              Interrupt                                  : INT_DMA1
**              Interrupt request                          : Disabled
**              Interrupt priority                         : 0 (Highest)
**              ISR Name                                   : 
**            Transfer done 2                              : 
**              Interrupt                                  : INT_DMA2
**              Interrupt request                          : Disabled
**              Interrupt priority                         : 0 (Highest)
**              ISR Name                                   : 
**            Transfer done 3                              : 
**              Interrupt                                  : INT_DMA3
**              Interrupt request                          : Disabled
**              Interrupt priority                         : 0 (Highest)
**              ISR Name                                   : 
**            Transfer done 4                              : 
**              Interrupt                                  : INT_DMA4
**              Interrupt request                          : Disabled
**              Interrupt priority                         : 0 (Highest)
**              ISR Name                                   : 
**            Transfer done 5                              : 
**              Interrupt                                  : INT_DMA5
**              Interrupt request                          : Disabled
**              Interrupt priority                         : 0 (Highest)
**              ISR Name                                   : 
**            Transfer done 6                              : 
**              Interrupt                                  : INT_DMA6
**              Interrupt request                          : Disabled
**              Interrupt priority                         : 0 (Highest)
**              ISR Name                                   : 
**            Transfer done 7                              : 
**              Interrupt                                  : INT_DMA7
**              Interrupt request                          : Disabled
**              Interrupt priority                         : 0 (Highest)
**              ISR Name                                   : 
**            Transfer done 8                              : 
**              Interrupt                                  : INT_DMA8
**              Interrupt request                          : Disabled
**              Interrupt priority                         : 0 (Highest)
**              ISR Name                                   : 
**            Transfer done 9                              : 
**              Interrupt                                  : INT_DMA9
**              Interrupt request                          : Disabled
**              Interrupt priority                         : 0 (Highest)
**              ISR Name                                   : 
**            Transfer done 10                             : 
**              Interrupt                                  : INT_DMA10
**              Interrupt request                          : Disabled
**              Interrupt priority                         : 0 (Highest)
**              ISR Name                                   : 
**            Transfer done 11                             : 
**              Interrupt                                  : INT_DMA11
**              Interrupt request                          : Disabled
**              Interrupt priority                         : 0 (Highest)
**              ISR Name                                   : 
**            Transfer done 12                             : 
**              Interrupt                                  : INT_DMA12
**              Interrupt request                          : Disabled
**              Interrupt priority                         : 0 (Highest)
**              ISR Name                                   : 
**            Transfer done 13                             : 
**              Interrupt                                  : INT_DMA13
**              Interrupt request                          : Disabled
**              Interrupt priority                         : 0 (Highest)
**              ISR Name                                   : 
**            Transfer done 14                             : 
**              Interrupt                                  : INT_DMA14
**              Interrupt request                          : Disabled
**              Interrupt priority                         : 0 (Highest)
**              ISR Name                                   : 
**            Transfer done 15                             : 
**              Interrupt                                  : INT_DMA15
**              Interrupt request                          : Disabled
**              Interrupt priority                         : 0 (Highest)
**              ISR Name                                   : 
**            Error                                        : 
**              Interrupt                                  : INT_DMA_Error
**              Interrupt request                          : Enabled
**              Interrupt priority                         : 0 (Highest)
**              ISR Name                                   : DMA_error
**          Initialization                                 : 
**            Call Init method                             : no
**     Contents    :
**         Init - void eDMA1_Init(void);
**
**Copyright : 1997 - 2014 Freescale Semiconductor, Inc. 
**All Rights Reserved.
**
**Redistribution and use in source and binary forms, with or without modification,
**are permitted provided that the following conditions are met:
**
**o Redistributions of source code must retain the above copyright notice, this list
**  of conditions and the following disclaimer.
**
**o Redistributions in binary form must reproduce the above copyright notice, this
**  list of conditions and the following disclaimer in the documentation and/or
**  other materials provided with the distribution.
**
**o Neither the name of Freescale Semiconductor, Inc. nor the names of its
**  contributors may be used to endorse or promote products derived from this
**  software without specific prior written permission.
**
**THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
**ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
**WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
**DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
**ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
**(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
**LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
**ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
**(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
**SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
**
**http: www.freescale.com
**mail: support@freescale.com
** ###################################################################*/
/*!
** @file eDMA1.h
** @version 01.05
** @brief
**          This file implements the eDMA (DMA) module initialization
**          according to the Peripheral Initialization settings, and
**          defines interrupt service routines prototypes.
*/         
/*!
**  @addtogroup eDMA1_module eDMA1 module documentation
**  @{
*/         

#ifndef eDMA1_H_
#define eDMA1_H_

/* MODULE eDMA1. */

/* Including shared modules, which are used in the whole project */
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
#include "Cpu.h"

/* Peripheral base address parameter */
#define eDMA1_DEVICE DMA_BASE_PTR


/*
** ===================================================================
**     Method      :  eDMA1_Init (component Init_eDMA)
**     Description :
**         This method initializes registers of the eDMA module
**         according to the Peripheral Initialization settings.
**         Call this method in user code to initialize the module. By
**         default, the method is called by PE automatically; see "Call
**         Init method" property of the component for more details.
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/
void eDMA1_Init(void);
/*
** ===================================================================
** The interrupt service routine must be implemented by user in one
** of the user modules (see eDMA1.c file for more information).
** ===================================================================
*/
PE_ISR(DMA_ADC_DoneInterrupt);
/*
** ===================================================================
** The interrupt service routine must be implemented by user in one
** of the user modules (see eDMA1.c file for more information).
** ===================================================================
*/
PE_ISR(DMA_error);


/* END eDMA1. */
#endif /* #ifndef __eDMA1_H_ */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.3 [05.09]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/
