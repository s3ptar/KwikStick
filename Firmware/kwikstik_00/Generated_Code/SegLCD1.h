/* ###################################################################
**     This component module is generated by Processor Expert. Do not modify it.
**     Filename    : SegLCD1.h
**     Project     : ProcessorExpert
**     Processor   : MK40DX256ZVLQ10
**     Component   : SegLCD_LDD
**     Version     : Component 01.017, Driver 01.06, CPU db: 3.00.001
**     Compiler    : CodeWarrior ARM C Compiler
**     Date/Time   : 2019-01-07, 04:53, # CodeGen: 99
**     Abstract    :
**         This component "SegLCD_LDD" implements the segment Liquid Crystal Display (SegLCD)
**         driver module. It can drive an LCD which is composed of variable number
**         of frontplanes and backplanes. It can control also current mode of display.
**     Settings    :
**          Component name                                 : SegLCD1
**          Segment LCD module                             : LCD
**          Interrupt service/event                        : Disabled
**          Stop in Wait mode                              : no
**          Stop in Stop mode                              : no
**          Power supply                                   : 
**            LCD operation voltage                        : 3V
**            Power mode selection                         : Charge Pump
**            Voltage supply control                       : Drive VLL3 internally from VDD
**            Charge pump                                  : Enabled
**              Charge pump clock adjust                   : Fastest clock
**              Charge pump clock                          : 5.46 kHz
**              Voltage regulator                          : Disabled
**            Bias voltage VLL1                            : (VLL3 * 1/3) = 0.99V
**            Bias voltage VLL2                            : (VLL3 * 2/3) = 1.98V
**            Bias voltage VLL3                            : Connect internally to VDD(must be 3V)
**          Blink rate bits value                          : 3
**          Blink rate                                     : 0.999755 Hz
**          LCD frame frequency                            : 51.187 Hz
**          Base clock                                     : 800 Hz
**          Fault detect                                   : Disabled
**          Backplane pins                                 : 8
**            Backplane pin0                               : 
**              Backplane pin                              : PTD0/SPI0_PCS0/UART2_RTS_b/LCD_P40
**              Backplane pin signal                       : 
**            Backplane pin1                               : 
**              Backplane pin                              : PTD1/SPI0_SCK/UART2_CTS_b/LCD_P41/ADC0_SE5b
**              Backplane pin signal                       : 
**            Backplane pin2                               : 
**              Backplane pin                              : PTD2/SPI0_SOUT/UART2_RX/LCD_P42
**              Backplane pin signal                       : 
**            Backplane pin3                               : 
**              Backplane pin                              : PTD3/SPI0_SIN/UART2_TX/LCD_P43
**              Backplane pin signal                       : 
**            Backplane pin4                               : 
**              Backplane pin                              : PTD4/SPI0_PCS1/UART0_RTS_b/FTM0_CH4/EWM_IN/LCD_P44
**              Backplane pin signal                       : 
**            Backplane pin5                               : 
**              Backplane pin                              : PTD5/SPI0_PCS2/UART0_CTS_b/FTM0_CH5/EWM_OUT_b/LCD_P45/ADC0_SE6b
**              Backplane pin signal                       : 
**            Backplane pin6                               : 
**              Backplane pin                              : PTD6/SPI0_PCS3/UART0_RX/FTM0_CH6/FTM0_FLT0/LCD_P46/ADC0_SE7b
**              Backplane pin signal                       : 
**            Backplane pin7                               : 
**              Backplane pin                              : PTD7/CMT_IRO/UART0_TX/FTM0_CH7/FTM0_FLT1/LCD_P47
**              Backplane pin signal                       : 
**          Frontplane pins                                : 39
**            Frontplane pin0                              : 
**              Frontplane  pin                            : PTB1/I2C0_SDA/FTM1_CH1/FTM1_QD_PHB/LCD_P1/ADC0_SE9/ADC1_SE9/TSI0_CH6
**              Frontplane pin signal                      : 
**            Frontplane pin1                              : 
**              Frontplane  pin                            : PTB2/I2C0_SCL/UART0_RTS_b/FTM0_FLT3/LCD_P2/ADC0_SE12/TSI0_CH7
**              Frontplane pin signal                      : 
**            Frontplane pin2                              : 
**              Frontplane  pin                            : PTB3/I2C0_SDA/UART0_CTS_b/FTM0_FLT0/LCD_P3/ADC0_SE13/TSI0_CH8
**              Frontplane pin signal                      : 
**            Frontplane pin3                              : 
**              Frontplane  pin                            : PTB4/FTM1_FLT0/LCD_P4/ADC1_SE10
**              Frontplane pin signal                      : 
**            Frontplane pin4                              : 
**              Frontplane  pin                            : PTB5/FTM2_FLT0/LCD_P5/ADC1_SE11
**              Frontplane pin signal                      : 
**            Frontplane pin5                              : 
**              Frontplane  pin                            : PTB6/LCD_P6/ADC1_SE12
**              Frontplane pin signal                      : 
**            Frontplane pin6                              : 
**              Frontplane  pin                            : PTB7/LCD_P7/ADC1_SE13
**              Frontplane pin signal                      : 
**            Frontplane pin7                              : 
**              Frontplane  pin                            : PTB8/UART3_RTS_b/LCD_P8
**              Frontplane pin signal                      : 
**            Frontplane pin8                              : 
**              Frontplane  pin                            : PTB9/SPI1_PCS1/UART3_CTS_b/LCD_P9
**              Frontplane pin signal                      : 
**            Frontplane pin9                              : 
**              Frontplane  pin                            : PTB10/SPI1_PCS0/UART3_RX/FTM0_FLT1/LCD_P10/ADC1_SE14
**              Frontplane pin signal                      : 
**            Frontplane pin10                             : 
**              Frontplane  pin                            : PTB11/SPI1_SCK/UART3_TX/FTM0_FLT2/LCD_P11/ADC1_SE15
**              Frontplane pin signal                      : 
**            Frontplane pin11                             : 
**              Frontplane  pin                            : PTB16/SPI1_SOUT/UART0_RX/EWM_IN/LCD_P12/TSI0_CH9
**              Frontplane pin signal                      : 
**            Frontplane pin12                             : 
**              Frontplane  pin                            : PTB17/SPI1_SIN/UART0_TX/EWM_OUT_b/LCD_P13/TSI0_CH10
**              Frontplane pin signal                      : 
**            Frontplane pin13                             : 
**              Frontplane  pin                            : PTB18/CAN0_TX/FTM2_CH0/I2S0_TX_BCLK/FTM2_QD_PHA/LCD_P14/TSI0_CH11
**              Frontplane pin signal                      : 
**            Frontplane pin14                             : 
**              Frontplane  pin                            : PTB19/CAN0_RX/FTM2_CH1/I2S0_TX_FS/FTM2_QD_PHB/LCD_P15/TSI0_CH12
**              Frontplane pin signal                      : 
**            Frontplane pin15                             : 
**              Frontplane  pin                            : PTB20/SPI2_PCS0/CMP0_OUT/LCD_P16
**              Frontplane pin signal                      : 
**            Frontplane pin16                             : 
**              Frontplane  pin                            : PTB21/SPI2_SCK/CMP1_OUT/LCD_P17
**              Frontplane pin signal                      : 
**            Frontplane pin17                             : 
**              Frontplane  pin                            : PTB22/SPI2_SOUT/CMP2_OUT/LCD_P18
**              Frontplane pin signal                      : 
**            Frontplane pin18                             : 
**              Frontplane  pin                            : PTB23/SPI2_SIN/SPI0_PCS5/LCD_P19
**              Frontplane pin signal                      : 
**            Frontplane pin19                             : 
**              Frontplane  pin                            : PTC0/SPI0_PCS4/PDB0_EXTRG/I2S0_TXD/LCD_P20/ADC0_SE14/TSI0_CH13
**              Frontplane pin signal                      : 
**            Frontplane pin20                             : 
**              Frontplane  pin                            : PTC1/SPI0_PCS3/UART1_RTS_b/FTM0_CH0/LCD_P21/ADC0_SE15/TSI0_CH14
**              Frontplane pin signal                      : 
**            Frontplane pin21                             : 
**              Frontplane  pin                            : PTC2/SPI0_PCS2/UART1_CTS_b/FTM0_CH1/LCD_P22/ADC0_SE4b/CMP1_IN0/TSI0_CH15
**              Frontplane pin signal                      : 
**            Frontplane pin22                             : 
**              Frontplane  pin                            : PTC3/SPI0_PCS1/UART1_RX/FTM0_CH2/LCD_P23/CMP1_IN1
**              Frontplane pin signal                      : 
**            Frontplane pin23                             : 
**              Frontplane  pin                            : PTC4/SPI0_PCS0/UART1_TX/FTM0_CH3/CMP1_OUT/LCD_P24
**              Frontplane pin signal                      : 
**            Frontplane pin24                             : 
**              Frontplane  pin                            : PTC5/SPI0_SCK/LPT0_ALT2/CMP0_OUT/LCD_P25
**              Frontplane pin signal                      : 
**            Frontplane pin25                             : 
**              Frontplane  pin                            : PTC6/SPI0_SOUT/PDB0_EXTRG/LCD_P26/CMP0_IN0
**              Frontplane pin signal                      : 
**            Frontplane pin26                             : 
**              Frontplane  pin                            : PTC7/SPI0_SIN/LCD_P27/CMP0_IN1
**              Frontplane pin signal                      : 
**            Frontplane pin27                             : 
**              Frontplane  pin                            : PTC8/I2S0_MCLK/I2S0_CLKIN/LCD_P28/ADC1_SE4b/CMP0_IN2
**              Frontplane pin signal                      : 
**            Frontplane pin28                             : 
**              Frontplane  pin                            : PTC9/I2S0_RX_BCLK/FTM2_FLT0/LCD_P29/ADC1_SE5b/CMP0_IN3
**              Frontplane pin signal                      : 
**            Frontplane pin29                             : 
**              Frontplane  pin                            : PTC10/I2C1_SCL/I2S0_RX_FS/LCD_P30/ADC1_SE6b/CMP0_IN4
**              Frontplane pin signal                      : 
**            Frontplane pin30                             : 
**              Frontplane  pin                            : PTC11/I2C1_SDA/I2S0_RXD/LCD_P31/ADC1_SE7b
**              Frontplane pin signal                      : 
**            Frontplane pin31                             : 
**              Frontplane  pin                            : PTC12/UART4_RTS_b/LCD_P32
**              Frontplane pin signal                      : 
**            Frontplane pin32                             : 
**              Frontplane  pin                            : PTC13/UART4_CTS_b/LCD_P33
**              Frontplane pin signal                      : 
**            Frontplane pin33                             : 
**              Frontplane  pin                            : PTC14/UART4_RX/LCD_P34
**              Frontplane pin signal                      : 
**            Frontplane pin34                             : 
**              Frontplane  pin                            : PTC15/UART4_TX/LCD_P35
**              Frontplane pin signal                      : 
**            Frontplane pin35                             : 
**              Frontplane  pin                            : PTC16/CAN1_RX/UART3_RX/LCD_P36
**              Frontplane pin signal                      : 
**            Frontplane pin36                             : 
**              Frontplane  pin                            : PTC17/CAN1_TX/UART3_TX/LCD_P37
**              Frontplane pin signal                      : 
**            Frontplane pin37                             : 
**              Frontplane  pin                            : PTC18/UART3_RTS_b/LCD_P38
**              Frontplane pin signal                      : 
**            Frontplane pin38                             : 
**              Frontplane  pin                            : PTC19/UART3_CTS_b/LCD_P39
**              Frontplane pin signal                      : 
**          Initialization                                 : 
**            Enable in init. code                         : yes
**            Auto initialization                          : no
**            Event mask                                   : 
**              OnFrameFrequency                           : Disabled
**              OnFaultDetectComplete                      : Disabled
**          CPU clock/configuration selection              : 
**            Clock configuration 0                        : This component enabled
**            Clock configuration 1                        : This component disabled
**            Clock configuration 2                        : This component disabled
**            Clock configuration 3                        : This component disabled
**            Clock configuration 4                        : This component disabled
**            Clock configuration 5                        : This component disabled
**            Clock configuration 6                        : This component disabled
**            Clock configuration 7                        : This component disabled
**     Contents    :
**         Init              - LDD_TDeviceData* SegLCD1_Init(LDD_TUserData *UserDataPtr);
**         Deinit            - void SegLCD1_Deinit(LDD_TDeviceData *DeviceDataPtr);
**         Enable            - LDD_TError SegLCD1_Enable(LDD_TDeviceData *DeviceDataPtr);
**         Disable           - LDD_TError SegLCD1_Disable(LDD_TDeviceData *DeviceDataPtr);
**         GetEventStatus    - LDD_TError SegLCD1_GetEventStatus(LDD_TDeviceData *DeviceDataPtr,...
**         SetFrontplaneData - LDD_TError SegLCD1_SetFrontplaneData(LDD_TDeviceData *DeviceDataPtr,...
**         GetFrontplaneData - LDD_TError SegLCD1_GetFrontplaneData(LDD_TDeviceData *DeviceDataPtr,...
**         SetBlinking       - LDD_TError SegLCD1_SetBlinking(LDD_TDeviceData *DeviceDataPtr,...
**         SetBlank          - LDD_TError SegLCD1_SetBlank(LDD_TDeviceData *DeviceDataPtr,...
**
**Copyright : 1997 - 2014 Freescale Semiconductor, Inc. 
**All Rights Reserved.
**
**Redistribution and use in source and binary forms, with or without modification,
**are permitted provided that the following conditions are met:
**
**o Redistributions of source code must retain the above copyright notice, this list
**  of conditions and the following disclaimer.
**
**o Redistributions in binary form must reproduce the above copyright notice, this
**  list of conditions and the following disclaimer in the documentation and/or
**  other materials provided with the distribution.
**
**o Neither the name of Freescale Semiconductor, Inc. nor the names of its
**  contributors may be used to endorse or promote products derived from this
**  software without specific prior written permission.
**
**THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
**ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
**WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
**DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
**ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
**(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
**LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
**ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
**(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
**SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
**
**http: www.freescale.com
**mail: support@freescale.com
** ###################################################################*/
/*!
** @file SegLCD1.h
** @version 01.06
** @brief
**         This component "SegLCD_LDD" implements the segment Liquid Crystal Display (SegLCD)
**         driver module. It can drive an LCD which is composed of variable number
**         of frontplanes and backplanes. It can control also current mode of display.
*/         
/*!
**  @addtogroup SegLCD1_module SegLCD1 module documentation
**  @{
*/         

#ifndef __SegLCD1_H
#define __SegLCD1_H

/* MODULE SegLCD1. */

/* Include shared modules, which are used for whole project */
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
/* Include inherited components */

#include "Cpu.h"

#ifdef __cplusplus
extern "C" {
#endif 


/*! Peripheral base address of a device allocated by the component. This constant can be used directly in PDD macros. */
#define SegLCD1_PRPH_BASE_ADDRESS  0x400BE000U
  


/*
** ===================================================================
**     Method      :  SegLCD1_Init (component SegLCD_LDD)
*/
/*!
**     @brief
**         Initializes the device. Allocates memory for the device data
**         structure, allocates interrupt vectors and sets interrupt
**         priority, sets pin routing, sets timing, etc.
**         If the "Enable in init. code" is set to "yes" value then the
**         device is also enabled(see the description of the Enable()
**         method). In this case the Enable() method is not necessary
**         and needn't to be generated. 
**         This method can be called only once. Before the second call
**         of Init() the Deinit() must be called first.
**     @param
**         UserDataPtr     - Pointer to the user or
**                           RTOS specific data. This pointer will be
**                           passed as an event or callback parameter.
**     @return
**                         - Pointer to the device data structure.
*/
/* ===================================================================*/
LDD_TDeviceData* SegLCD1_Init(LDD_TUserData *UserDataPtr);

/*
** ===================================================================
**     Method      :  SegLCD1_Deinit (component SegLCD_LDD)
*/
/*!
**     @brief
**         Deinitializes the device. Switches off the device, frees the
**         device data structure memory, interrupts vectors, etc.
**     @param
**         DeviceDataPtr   - Device data structure
**                           pointer.
*/
/* ===================================================================*/
void SegLCD1_Deinit(LDD_TDeviceData *DeviceDataPtr);

/*
** ===================================================================
**     Method      :  SegLCD1_Enable (component SegLCD_LDD)
*/
/*!
**     @brief
**         Enables the device - it starts the segment LCD module.
**     @param
**         DeviceDataPtr   - Device data structure
**                           pointer.
**     @return
**                         - Error code, possible codes:
**                           ERR_OK - OK
**                           ERR_SPEED - This device does not work in
**                           the active clock configuration
*/
/* ===================================================================*/
LDD_TError SegLCD1_Enable(LDD_TDeviceData *DeviceDataPtr);

/*
** ===================================================================
**     Method      :  SegLCD1_Disable (component SegLCD_LDD)
*/
/*!
**     @brief
**         Disables the device - it stops the segment LCD module.
**     @param
**         DeviceDataPtr   - Device data structure
**                           pointer.
**     @return
**                         - Error code, possible codes:
**                           ERR_OK - OK
**                           ERR_SPEED - This device does not work in
**                           the active clock configuration
*/
/* ===================================================================*/
LDD_TError SegLCD1_Disable(LDD_TDeviceData *DeviceDataPtr);

/*
** ===================================================================
**     Method      :  SegLCD1_GetEventStatus (component SegLCD_LDD)
*/
/*!
**     @brief
**         Gets current pending flags and clears them. This method is
**         available if the interrupt service property is disabled.
**         This method must be called in polling mode, when is called
**         method StartFaultDetectFrame.
**     @param
**         DeviceDataPtr   - Device data structure
**                           pointer.
**     @param
**         EventMaskPtr    - Pointer to address of
**                           the EventMask definition variable.
**     @return
**                         - Error code, possible codes:
**                           ERR_OK - OK
**                           ERR_DISABLED - This component is disabled
**                           by user.
**                           ERR_SPEED - This device does not work in
**                           the active clock configuration
*/
/* ===================================================================*/
LDD_TError SegLCD1_GetEventStatus(LDD_TDeviceData *DeviceDataPtr, LDD_TEventMask *EventMaskPtr);

/*
** ===================================================================
**     Method      :  SegLCD1_SetFrontplaneData (component SegLCD_LDD)
*/
/*!
**     @brief
**         Set data to the LCD frontplane data registers. It
**         sets/clears all used segments.
**     @param
**         DeviceDataPtr   - Device data structure
**                           pointer.
**     @param
**         Index           - Index of frontplane waveform. Value
**                           corresponds with the index frontplane pins,
**                           what is connected to LCD segment.
**     @param
**         Data            - Value of the frontplane segment. Each
**                           value is the array boolean, word - that
**                           defines state of an LCD segment (On - 1/Off
**                           - 0). Bit position of the word (number of
**                           backplane..0), when is segment on/off,
**                           corresponds with the value of backplane
**                           pins index.
**     @return
**                         - Error code, possible codes:
**                           ERR_OK - OK
**                           ERR_DISABLED - This component is disabled
**                           by user.
**                           ERR_SPEED - This device does not work in
**                           the active clock configuration
**                           ERR_PARAM_INDEX - Value of index is out of
**                           range.
**                           ERR_PARAM_DATA - Value of frontplane is out
**                           of range.
*/
/* ===================================================================*/
LDD_TError SegLCD1_SetFrontplaneData(LDD_TDeviceData *DeviceDataPtr, LDD_SegLCD_TPinIndex Index, LDD_SegLCD_TFrontplaneData Data);

/*
** ===================================================================
**     Method      :  SegLCD1_GetFrontplaneData (component SegLCD_LDD)
*/
/*!
**     @brief
**         Get data from the LCD frontplane data registers.
**     @param
**         DeviceDataPtr   - Device data structure
**                           pointer.
**     @param
**         Index           - Index of frontplane waveform. Value
**                           corresponds with the index frontplane pins,
**                           what is connected to LCD segment.
**     @param
**         DataPtr         - Pointer to a variable where value
**                           of the frontplane will be stored. Each
**                           value is the array boolean word that
**                           defines state of an LCD segment (On - 1/Off
**                           - 0). Bit position of the word (number of
**                           backplane..0), when is segment on/off,
**                           corresponds with value of backplane pins
**                           index.
**     @return
**                         - Error code, possible codes:
**                           ERR_OK - OK
**                           ERR_DISABLED - This component is disabled
**                           by user.
**                           ERR_SPEED - This device does not work in
**                           the active clock configuration
**                           ERR_PARAM_INDEX - Value of index is out of
**                           range.
*/
/* ===================================================================*/
LDD_TError SegLCD1_GetFrontplaneData(LDD_TDeviceData *DeviceDataPtr, LDD_SegLCD_TPinIndex Index, LDD_SegLCD_TFrontplaneData *DataPtr);

/*
** ===================================================================
**     Method      :  SegLCD1_SetBlinking (component SegLCD_LDD)
*/
/*!
**     @brief
**         Activates/deactivates blinking of all segments (according to
**         parameter BlinkMode).
**     @param
**         DeviceDataPtr   - Device data structure
**                           pointer.
**     @param
**         BlinkMode       - Parameter for setting blink
**                           mode of segments.
**                           LDD_SEGLCD_BLINK_OFF: Disable blinking.
**                           LDD_SEGLCD_BLINK_ALL: Enable blinking of
**                           all segments (blank display during blink
**                           period)
**                           LDD_SEGLCD_BLINK_ALL_ALTERNATE: Enable
**                           blinking of all segments in alternate mode
**                           (alternate display during blink period) -
**                           available only if supported by the HW.
**     @return
**                         - Error code, possible codes:
**                           ERR_OK - OK
**                           ERR_DISABLED - This component is disabled
**                           by user.
**                           ERR_SPEED - This device does not work in
**                           the active clock configuration
**                           ERR_PARAM_MODE - Value of BlinkMode
**                           parameter is out of range.
*/
/* ===================================================================*/
LDD_TError SegLCD1_SetBlinking(LDD_TDeviceData *DeviceDataPtr, LDD_SegLCD_TBlinking BlinkMode);

/*
** ===================================================================
**     Method      :  SegLCD1_SetBlank (component SegLCD_LDD)
*/
/*!
**     @brief
**         This method sets the blank display without affecting state
**         of each segment. If supported by the LCD module, the method
**         allows alternate display setting. A segment state is set by
**         method SetFrontplaneData or SetAlternateFrontplaneData.
**     @param
**         DeviceDataPtr   - Device data structure
**                           pointer.
**     @param
**         BlankMode       - Parameter for setting segment
**                           mode of display.
**                           LDD_SEGLCD_BLANK_STATE: It sets the blank
**                           display, all LCD segments are off, but
**                           internal state of the segments is not
**                           affected. It is possible to modify internal
**                           segment state using appropriate methods of
**                           the component.
**                           LDD_SEGLCD_NORMAL_STATE: A segment state
**                           (active/deactive/blinking) is displayed.
**                           LDD_SEGLCD_ALTERNATE_STATE: Sets the
**                           display to alternate mode - available only
**                           if supported by the HW.
**     @return
**                         - Error code, possible codes:
**                           ERR_OK - OK
**                           ERR_DISABLED - This component is disabled
**                           by user.
**                           ERR_SPEED - This device does not work in
**                           the active clock configuration
**                           ERR_PARAM_MODE - Value of BlankMode
**                           parameter is out of range.
*/
/* ===================================================================*/
LDD_TError SegLCD1_SetBlank(LDD_TDeviceData *DeviceDataPtr, LDD_SegLCD_TSetBlank BlankMode);

/* END SegLCD1. */

#ifdef __cplusplus
}  /* extern "C" */
#endif 

#endif
/* ifndef __SegLCD1 */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.3 [05.09]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/
